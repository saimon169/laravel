to create project from cmd
composer create-project laravel/laravel laravel_project



model view controller
R:Route
model view controller
R:Route
git log:for user name and email  and commit
changes
git whatchanged
git reset --hard
git reset --soft

3/4/2022
views and routes
php artisan:to see the cmd

create database in localhost/phpmyadmin

after database is created in cmd
php artisan migrate

php artisan serve in vs code terminal

http://localhost:8000

requests:crud
Get:read Post:create Put/Patch:update Delete:delete
web return view


Route::get('/abc', function () {
    return 'Hello';
});

http://localhost:8000/abc

route web.php to access the file

views ma chai create new file

php artisan make:controller TodoController:to create controller


@php artisan key:generate --ansi
@php artisan vendor:publish --tag=laravel-assets --ansi --force

blade:
@for,@if,@break,@php,compact controller,web,views ma xaa
!--  {{$arr}} we cannot pass the array like this it will show the error -->

Database: Migrations
there should be database to migrate it
Migration:to make the table update at a same time.
Migrations are like version control for your database, allowing your team to define and share the application's database schema definition

1)php artisan make:migration create_flights_table:to create a table table name is always plural
under migration database:there is new migration created file

2)php aritsan migrate:to make the table up todate in phpmyadmin database laravelrohan


Generating Migrations
php artisan make:migration create_flights_table:to create table


**Migration Structure:
when added a new table 
3)php artisan migrate:fresh : not to use more it add totally new one not recommended

4)php artisan make:migration add_column_to_tasks_table:to add column instead of migrate fresh into table 
to push:php aritsan migrate

5) public function up()
    {
        Schema::table('tasks', function (Blueprint $table) {
            //
            $table->string('detail')->after('task');
            $table->text('text')->after('task');
        });
    } in tasks to add column in existing table

6)php artisan make:migration create_employees_table php artisan make:migration create_employees_table
php artisan migrate
php artisan make:migration add_column_to_employees_table
php artisan migrate:fresh
adding nullable ad default:
$table->integer('contact')->after('active')->nullable(); 
            $table->string('address')->after('contact')->default('a');
7)foreign key     
 public function up()
    {
        Schema::table('tasks', function (Blueprint $table) {
            $table->unsignedBigInteger('employees_id');
            $table->foreign('employees_id')->references('id')->on('employees');
        });
    }

primary key must always be in first so change the number of the primary key and foreign key must be at below of primary key
2022_03_11_000144_create_employees_table:primary key the number 0
2022_03_11_014852_add_column_to_tasks_table:foreign key the number 1


3/14/2022
php artisan make:model Task
php artisan tinker
App\Models\Task::all()
App\Models\Task::where('task','LIKE','mo%')->get()
App\Models\Task::find(1):to find primary key
App\Models\Task::join('employees','employees.id','=','tasks.employees_id')->get():inner join


project 
new register.blade.php
php artisan make:controller UserController 
usercontroller vitra
class UserController extends Controller
{
    public function createRegister(){
        return view('register');
    }
}
then web .php
Route::get('/create_register',[UserController::class,"createRegister"]);
then bootstrap in register

